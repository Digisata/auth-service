{
  "swagger": "2.0",
  "info": {
    "title": "Auth Service",
    "version": "v1.0.0"
  },
  "tags": [
    {
      "name": "AuthService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/auth/login-admin": {
      "post": {
        "summary": "Admin login",
        "description": "This API for admin login",
        "operationId": "AuthService_LoginAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "security": []
      }
    },
    "/api/v1/auth/login-committee": {
      "post": {
        "summary": "Committee login",
        "description": "This API for committee login",
        "operationId": "AuthService_LoginCommittee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "security": []
      }
    },
    "/api/v1/auth/login-customer": {
      "post": {
        "summary": "Customer login",
        "description": "This API for customer login",
        "operationId": "AuthService_LoginCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "security": []
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "User logout",
        "description": "This API for user logout",
        "operationId": "AuthService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLogoutRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "summary": "Refresh token",
        "description": "This API for refresh token",
        "operationId": "AuthService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "security": []
      }
    },
    "/api/v1/auth/verify": {
      "get": {
        "summary": "Verify request",
        "description": "This API for verify request",
        "operationId": "AuthService_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/profile": {
      "get": {
        "summary": "Get profile",
        "description": "This API for get profile",
        "operationId": "AuthService_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/profile/change-password": {
      "put": {
        "summary": "Change password",
        "description": "This API for change password",
        "operationId": "AuthService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get all user",
        "description": "This API for get all user",
        "operationId": "AuthService_GetAllUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAllUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "summary": "Create user",
        "description": "This API for create user",
        "operationId": "AuthService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateUserRequest"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get user by id",
        "description": "This API for get user by id",
        "operationId": "AuthService_GetUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete user by id",
        "description": "This API for delete user by id",
        "operationId": "AuthService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update user by id",
        "description": "This API for update user by id",
        "operationId": "AuthService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthServiceUpdateUserBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "AuthServiceUpdateUserBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer",
          "format": "int32"
        },
        "deleted_at": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoBaseResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protoChangePasswordRequest": {
      "type": "object",
      "properties": {
        "old_password": {
          "type": "string"
        },
        "new_password": {
          "type": "string"
        }
      }
    },
    "protoCreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "protoGetAllUserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoGetUserByIDResponse"
          }
        }
      }
    },
    "protoGetProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "integer",
          "format": "int32"
        },
        "deleted_at": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Profile"
    },
    "protoGetUserByIDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "is_active": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "integer",
          "format": "int32"
        },
        "deleted_at": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "User"
    },
    "protoLoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "protoLogoutRequest": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "protoRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "protoRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
