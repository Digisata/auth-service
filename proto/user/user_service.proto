syntax = "proto3";

package auth_service.user;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "user/payload_messages.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/digisata/auth-service/proto/user;userPb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
      security: {
              key: "Bearer"
              value: {
                  type: TYPE_API_KEY
                  in: IN_HEADER
                  name: "Authorization"
                  description: "Authentication token, prefixed by Bearer: Bearer <token>"
              }
      }
  }
  security: {
      security_requirement: {
          key: "Bearer"
      }
  }
  info: {
    title: "Auth Service",
    version: "v1.0.0"
  }
  consumes: "application/json"
  produces: "application/json"
};

service AuthService {
  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/login",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        security: {}
        tags: ["User"]
        summary: "User login"
        description: "This API for user login"
    };
  }

  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/refresh",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        security: {}
        tags: ["User"]
        summary: "Refresh token"
        description: "This API for refresh token"
    };
  }

  rpc CreateUser (CreateUserRequest) returns (BaseResponse) {
    option (google.api.http) = {
      post: "/api/v1/users",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        tags: ["User"]
        summary: "Create user"
        description: "This API for create user"
    };
  }

  rpc GetUserByID (google.protobuf.Empty) returns (GetUserByIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/users",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        tags: ["User"]
        summary: "Get user by id"
        description: "This API for get user by id"
    };
  }

  rpc Logout (RefreshTokenRequest) returns (BaseResponse) {
    option (google.api.http) = {
      post: "/api/v1/logout",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        tags: ["User"]
        summary: "User logout"
        description: "This API for user logout"
    };
  }
}